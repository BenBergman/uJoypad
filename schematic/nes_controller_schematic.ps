%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.7.1-20110619-323-gc2e926e
%%CreationDate: Fri May 11 21:52:21 2012
%%Title: /home/ben/Dropbox/Projects/uJoypad/schematic/nes_controller_schematic.sch
%%Author: ben
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 500 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
0.400 0.400 0.400 setrgbcolor
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
0.000 0.545 0.000 setrgbcolor
46400 48800 46600 48700 10 line
46600 48700 46400 48600 10 line
46400 48600 46600 48500 10 line
46600 48500 46400 48400 10 line
46400 48800 46600 48900 10 line
46600 48900 46500 48950 10 line
0.000 0.000 0.000 setrgbcolor
46500 48100 46500 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 0 46375 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
46400 48401 46500 48350 10 line
46700 48800 46900 48700 10 line
46900 48700 46700 48600 10 line
46700 48600 46900 48500 10 line
46900 48500 46700 48400 10 line
46700 48800 46900 48900 10 line
46900 48900 46800 48950 10 line
0.000 0.000 0.000 setrgbcolor
46800 48100 46800 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(3) ] 0 46675 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
46700 48401 46800 48350 10 line
47000 48800 47200 48700 10 line
47200 48700 47000 48600 10 line
47000 48600 47200 48500 10 line
47200 48500 47000 48400 10 line
47000 48800 47200 48900 10 line
47200 48900 47100 48950 10 line
0.000 0.000 0.000 setrgbcolor
47100 48100 47100 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(4) ] 0 46975 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
47000 48401 47100 48350 10 line
47300 48800 47500 48700 10 line
47500 48700 47300 48600 10 line
47300 48600 47500 48500 10 line
47500 48500 47300 48400 10 line
47300 48800 47500 48900 10 line
47500 48900 47400 48950 10 line
0.000 0.000 0.000 setrgbcolor
47400 48100 47400 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(5) ] 0 47275 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
47300 48401 47400 48350 10 line
0.000 0.000 0.000 setrgbcolor
49400 49200 49700 49200 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 0 49500 49250 144.444443 text
grestore
47700 48100 47700 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(6) ] 0 47575 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
47600 48401 47700 48350 10 line
47600 48800 47800 48700 10 line
47800 48700 47600 48600 10 line
47600 48600 47800 48500 10 line
47800 48500 47600 48400 10 line
47600 48800 47800 48900 10 line
47800 48900 47700 48950 10 line
46500 48950 46500 49200 10 line
46800 48950 46800 49200 10 line
47100 48950 47100 49200 10 line
47400 48950 47400 49200 10 line
47700 48950 47700 49200 10 line
46500 49200 49400 49200 10 line
47900 48401 48000 48350 10 line
47900 48800 48100 48700 10 line
48100 48700 47900 48600 10 line
47900 48600 48100 48500 10 line
48100 48500 47900 48400 10 line
47900 48800 48100 48900 10 line
48100 48900 48000 48950 10 line
48000 48950 48000 49200 10 line
0.000 0.000 0.000 setrgbcolor
48000 48100 48000 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(7) ] 0 47875 48200 144.444443 text
grestore
48300 48100 48300 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(8) ] 0 48175 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
48200 48401 48300 48350 10 line
48200 48800 48400 48700 10 line
48400 48700 48200 48600 10 line
48200 48600 48400 48500 10 line
48400 48500 48200 48400 10 line
48200 48800 48400 48900 10 line
48400 48900 48300 48950 10 line
48300 48950 48300 49200 10 line
48500 48401 48600 48350 10 line
48500 48800 48700 48700 10 line
48700 48700 48500 48600 10 line
48500 48600 48700 48500 10 line
48700 48500 48500 48400 10 line
48500 48800 48700 48900 10 line
48700 48900 48600 48950 10 line
48600 48950 48600 49200 10 line
0.000 0.000 0.000 setrgbcolor
48600 48100 48600 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(9) ] 0 48475 48200 144.444443 text
grestore
48900 48100 48900 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(10) ] 0 48775 48200 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
48800 48401 48900 48350 10 line
48800 48800 49000 48700 10 line
49000 48700 48800 48600 10 line
48800 48600 49000 48500 10 line
49000 48500 48800 48400 10 line
48800 48800 49000 48900 10 line
49000 48900 48900 48950 10 line
48900 48950 48900 49200 10 line
49100 48401 49200 48350 10 line
49100 48800 49300 48700 10 line
49300 48700 49100 48600 10 line
49100 48600 49300 48500 10 line
49300 48500 49100 48400 10 line
49100 48800 49300 48900 10 line
49300 48900 49200 48950 10 line
49200 48950 49200 49200 10 line
0.000 0.000 0.000 setrgbcolor
49200 48100 49200 48352 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(11) ] 0 49075 48200 144.444443 text
grestore
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(3.9K) ] 0 46500 49300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
50000 49400 50000 49600 10 line
0.000 0.545 0.000 setrgbcolor
49850 49600 50150 49600 10 line
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(+5V) ] 0 49875 49650 144.444443 text
grestore
grestore
gsave
0.000 0.000 0.000 setrgbcolor
46000 41400 46000 41600 10 line
0.000 0.545 0.000 setrgbcolor
45900 41400 46100 41400 10 line
45955 41350 46045 41350 10 line
45980 41310 46020 41310 10 line
grestore
0.000 0.000 0.933 setrgbcolor
49200 48100 49200 46600 10 line
41400 46600 50300 46600 10 line
48900 48100 48900 46200 10 line
42100 46200 50300 46200 10 line
48600 48100 48600 45800 10 line
42800 45800 50300 45800 10 line
48300 48100 48300 45400 10 line
43500 45400 50300 45400 10 line
48000 48100 48000 45000 10 line
44100 45000 50300 45000 10 line
47700 48100 47700 44600 10 line
44700 44600 50300 44600 10 line
47400 48100 47400 44200 10 line
45300 44200 50300 44200 10 line
47100 48100 47100 43800 10 line
46000 43800 50300 43800 10 line
46800 48100 46800 43000 10 line
46800 43000 50300 43000 10 line
50300 42600 46500 42600 10 line
46500 42600 46500 48100 10 line
49700 49200 50900 49200 10 line
50000 49200 50000 49400 10 line
41400 42900 41400 46600 10 line
42100 42900 42100 46200 10 line
42800 45800 42800 42900 10 line
43500 45400 43500 42900 10 line
44100 45000 44100 42900 10 line
44700 44600 44700 42900 10 line
45300 44200 45300 42900 10 line
46000 43800 46000 42900 10 line
46000 41600 46000 41900 10 line
41400 41900 50100 41900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
51200 48900 50900 48900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(2) ] 0 52350 48850 144.444443 text
grestore
51200 48300 50900 48300 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(4) ] 0 52350 48250 144.444443 text
grestore
51200 49200 50900 49200 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(1) ] 0 52350 49150 144.444443 text
grestore
51200 48600 50900 48600 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(3) ] 0 52350 48550 144.444443 text
grestore
51200 48000 50900 48000 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(5) ] 0 52350 47950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
51200 49200 52100 49200 10 line
51200 48900 52100 48900 10 line
51200 48600 52100 48600 10 line
51200 48300 52100 48300 10 line
51200 48000 52100 48000 10 line
52100 47800 52600 47800 10 line
52600 47800 52600 49400 10 line
52600 49400 52100 49400 10 line
52100 49400 52100 47800 10 line
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 202.222224 [(CONN?) ] 0 52500 49500 180.555557 text
grestore
50900 48900 49500 48900 10 line
49500 48900 49500 42600 10 line
50900 48600 49800 48600 10 line
49800 48600 49800 43000 10 line
50900 48300 50100 48300 10 line
50100 41900 50100 48300 10 line
50900 48000 50900 47500 10 line
50900 47500 53000 47500 10 line
53000 47500 53000 43800 10 line
53000 43800 52300 43800 10 line
50300 43400 50100 43400 10 line
gsave
0.000 0.000 0.000 setrgbcolor
51200 50000 50900 50000 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(2) ] 0 52250 49950 144.444443 text
grestore
51200 50300 50900 50300 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(1) ] 0 52250 50250 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
51200 50300 52100 50300 10 line
51200 50000 52100 50000 10 line
52100 49800 52600 49800 10 line
52600 49800 52600 50500 10 line
52600 50500 52100 50500 10 line
52100 50500 52100 49800 10 line
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 202.222224 [(POW) ] 0 52600 50600 180.555557 text
grestore
50700 50300 50700 49200 10 line
50700 50300 50900 50300 10 line
50900 50000 50500 50000 10 line
50500 50000 50500 48300 10 line
gsave
0.000 0.000 0.000 setrgbcolor
50300 42600 50600 42600 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(9) ] 0 50500 42650 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(Parallel/\\_Serial\\_) ] 0 50650 42600 144.444443 text
grestore
50300 43400 50600 43400 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(11) ] 0 50500 43450 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(Serial In) ] 0 50650 43400 144.444443 text
grestore
50300 43800 50600 43800 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(1) ] 0 50500 43850 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I8) ] 0 50650 43800 144.444443 text
grestore
50300 44200 50600 44200 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(15) ] 0 50500 44250 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I7) ] 0 50650 44200 144.444443 text
grestore
50300 44600 50600 44600 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(14) ] 0 50500 44650 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I6) ] 0 50650 44600 144.444443 text
grestore
50300 45000 50600 45000 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(13) ] 0 50500 45050 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I5) ] 0 50650 45000 144.444443 text
grestore
50300 45400 50600 45400 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(4) ] 0 50500 45450 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I4) ] 0 50650 45400 144.444443 text
grestore
50300 45800 50600 45800 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(5) ] 0 50500 45850 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I3) ] 0 50650 45800 144.444443 text
grestore
50300 46200 50600 46200 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(6) ] 0 50500 46250 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I2) ] 0 50650 46200 144.444443 text
grestore
50300 46600 50600 46600 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(7) ] 0 50500 46650 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(I1) ] 0 50650 46600 144.444443 text
grestore
50300 43000 50600 43000 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 161.777776 [(10) ] 0 50500 43050 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 161.777776 [(CLK) ] 0 50700 43000 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
50700 43000 50600 43075 10 line
50700 43000 50600 42925 10 line
0.000 0.000 0.000 setrgbcolor
52300 43800 52000 43800 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(3) ] 0 52100 43850 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false true false false 161.777776 [(Q8) ] 0 51950 43800 144.444443 text
grestore
52300 44200 52000 44200 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(12) ] 0 52100 44250 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false true false false 161.777776 [(Q7) ] 0 51950 44200 144.444443 text
grestore
52300 44600 52000 44600 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 0 52100 44650 144.444443 text
grestore
gsave
0.000 0.545 0.000 setrgbcolor
false true false false 161.777776 [(Q6) ] 0 51950 44600 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
50600 42300 52000 42300 10 line
52000 42300 52000 46900 10 line
52000 46900 50600 46900 10 line
50600 46900 50600 42300 10 line
gsave
0.000 0.545 0.000 setrgbcolor
false false false false 202.222224 [(4021) ] 0 50600 46950 180.555557 text
grestore
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false true false false 202.222224 [(U?) ] 0 52000 47000 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
41400 41900 41400 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 41350 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
41450 42200 41450 42600 10 line
0.000 0.000 0.000 setrgbcolor
41400 42750 41400 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 41350 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
41450 42400 41250 42400 10 line
41400 42050 41400 42225 10 line
41400 42750 41400 42575 10 line
41400 42239 14 0 360 10 darc
41399 42562 14 0 360 10 darc
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SR) ] 90 41150 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
42100 41900 42100 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 42050 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
42150 42200 42150 42600 10 line
0.000 0.000 0.000 setrgbcolor
42100 42750 42100 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 42050 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
42150 42400 41950 42400 10 line
42100 42050 42100 42225 10 line
42100 42750 42100 42575 10 line
42100 42239 14 0 360 10 darc
42099 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
42100 41900
25
0 360 arc
fill
newpath
42100 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SL) ] 90 41850 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
42800 41900 42800 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 42750 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
42850 42200 42850 42600 10 line
0.000 0.000 0.000 setrgbcolor
42800 42750 42800 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 42750 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
42850 42400 42650 42400 10 line
42800 42050 42800 42225 10 line
42800 42750 42800 42575 10 line
42800 42239 14 0 360 10 darc
42799 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
42800 41900
25
0 360 arc
fill
newpath
42800 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SD) ] 90 42550 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
43500 41900 43500 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 43450 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
43550 42200 43550 42600 10 line
0.000 0.000 0.000 setrgbcolor
43500 42750 43500 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 43450 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
43550 42400 43350 42400 10 line
43500 42050 43500 42225 10 line
43500 42750 43500 42575 10 line
43500 42239 14 0 360 10 darc
43499 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
43500 41900
25
0 360 arc
fill
newpath
43500 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SU) ] 90 43250 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
44100 41900 44100 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 44050 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
44150 42200 44150 42600 10 line
0.000 0.000 0.000 setrgbcolor
44100 42750 44100 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 44050 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
44150 42400 43950 42400 10 line
44100 42050 44100 42225 10 line
44100 42750 44100 42575 10 line
44100 42239 14 0 360 10 darc
44099 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
44100 41900
25
0 360 arc
fill
newpath
44100 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(ST) ] 90 43850 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
44700 41900 44700 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 44650 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
44750 42200 44750 42600 10 line
0.000 0.000 0.000 setrgbcolor
44700 42750 44700 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 44650 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
44750 42400 44550 42400 10 line
44700 42050 44700 42225 10 line
44700 42750 44700 42575 10 line
44700 42239 14 0 360 10 darc
44699 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
44700 41900
25
0 360 arc
fill
newpath
44700 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SEL) ] 90 44450 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
45300 41900 45300 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 45250 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
45350 42200 45350 42600 10 line
0.000 0.000 0.000 setrgbcolor
45300 42750 45300 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 45250 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
45350 42400 45150 42400 10 line
45300 42050 45300 42225 10 line
45300 42750 45300 42575 10 line
45300 42239 14 0 360 10 darc
45299 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
45300 41900
25
0 360 arc
fill
newpath
45300 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SB) ] 90 45050 42300 180.555557 text
grestore
gsave
0.000 0.000 0.000 setrgbcolor
46000 41900 46000 42050 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(1) ] 90 45950 41950 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
46050 42200 46050 42600 10 line
0.000 0.000 0.000 setrgbcolor
46000 42750 46000 42900 10 line
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 161.777776 [(2) ] 90 45950 42800 144.444443 text
grestore
0.000 0.545 0.000 setrgbcolor
46050 42400 45850 42400 10 line
46000 42050 46000 42225 10 line
46000 42750 46000 42575 10 line
46000 42239 14 0 360 10 darc
45999 42562 14 0 360 10 darc
0.627 0.125 0.941 setrgbcolor
newpath
46000 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor
false false false false 202.222224 [(SA) ] 90 45750 42300 180.555557 text
grestore
0.627 0.125 0.941 setrgbcolor
newpath
49200 46600
25
0 360 arc
fill
newpath
49200 46600
25
0 360 arc
fill
newpath
49200 46600
25
0 360 arc
fill
newpath
48900 46200
25
0 360 arc
fill
newpath
48900 46200
25
0 360 arc
fill
newpath
48900 46200
25
0 360 arc
fill
newpath
48600 45800
25
0 360 arc
fill
newpath
48600 45800
25
0 360 arc
fill
newpath
48600 45800
25
0 360 arc
fill
newpath
48300 45400
25
0 360 arc
fill
newpath
48300 45400
25
0 360 arc
fill
newpath
48300 45400
25
0 360 arc
fill
newpath
48000 45000
25
0 360 arc
fill
newpath
48000 45000
25
0 360 arc
fill
newpath
48000 45000
25
0 360 arc
fill
newpath
47700 44600
25
0 360 arc
fill
newpath
47700 44600
25
0 360 arc
fill
newpath
47700 44600
25
0 360 arc
fill
newpath
47400 44200
25
0 360 arc
fill
newpath
47400 44200
25
0 360 arc
fill
newpath
47400 44200
25
0 360 arc
fill
newpath
47100 43800
25
0 360 arc
fill
newpath
47100 43800
25
0 360 arc
fill
newpath
47100 43800
25
0 360 arc
fill
newpath
49800 43000
25
0 360 arc
fill
newpath
49500 42600
25
0 360 arc
fill
newpath
50000 49200
25
0 360 arc
fill
newpath
50700 49200
25
0 360 arc
fill
newpath
50000 49200
25
0 360 arc
fill
newpath
50000 49200
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
newpath
42100 41900
25
0 360 arc
fill
newpath
42800 41900
25
0 360 arc
fill
newpath
43500 41900
25
0 360 arc
fill
newpath
44100 41900
25
0 360 arc
fill
newpath
44700 41900
25
0 360 arc
fill
newpath
45300 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
newpath
49500 42600
25
0 360 arc
fill
newpath
49500 42600
25
0 360 arc
fill
newpath
49800 43000
25
0 360 arc
fill
newpath
49800 43000
25
0 360 arc
fill
newpath
50500 48300
25
0 360 arc
fill
newpath
50100 43400
25
0 360 arc
fill
newpath
50100 43400
25
0 360 arc
fill
newpath
50100 43400
25
0 360 arc
fill
newpath
50700 49200
25
0 360 arc
fill
newpath
50700 49200
25
0 360 arc
fill
newpath
50500 48300
25
0 360 arc
fill
newpath
50500 48300
25
0 360 arc
fill
newpath
42100 41900
25
0 360 arc
fill
newpath
42100 41900
25
0 360 arc
fill
newpath
42800 41900
25
0 360 arc
fill
newpath
42800 41900
25
0 360 arc
fill
newpath
43500 41900
25
0 360 arc
fill
newpath
43500 41900
25
0 360 arc
fill
newpath
44100 41900
25
0 360 arc
fill
newpath
44100 41900
25
0 360 arc
fill
newpath
44700 41900
25
0 360 arc
fill
newpath
44700 41900
25
0 360 arc
fill
newpath
45300 41900
25
0 360 arc
fill
newpath
45300 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
newpath
46000 41900
25
0 360 arc
fill
showpage
%%End
